{"ast":null,"code":"var _jsxFileName = \"C:\\\\logistics-app\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (storedUser) {\n        setUser(storedUser);\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n\n      // --- ROLE-BASED REDIRECT LOGIC ---\n      // Check the user's role and redirect accordingly\n      if (user.role === 'admin' || user.role === 'staff') {\n        navigate('/dashboard');\n      } else if (user.role === 'client') {\n        navigate('/my-shipments');\n      } else {\n        navigate('/login'); // Fallback\n      }\n    } catch (error) {\n      console.error('Login failed:', error.response ? error.response.data : error.message);\n      alert('Login failed. Please check your credentials.');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","token","localStorage","getItem","defaults","headers","common","storedUser","JSON","parse","login","email","password","response","post","data","setItem","stringify","role","error","console","message","alert","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/logistics-app/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      if(storedUser) {\r\n        setUser(storedUser);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n\r\n      // --- ROLE-BASED REDIRECT LOGIC ---\r\n      // Check the user's role and redirect accordingly\r\n      if (user.role === 'admin' || user.role === 'staff') {\r\n        navigate('/dashboard');\r\n      } else if (user.role === 'client') {\r\n        navigate('/my-shipments');\r\n      } else {\r\n        navigate('/login'); // Fallback\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Login failed:', error.response ? error.response.data : error.message);\r\n      alert('Login failed. Please check your credentials.');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    delete api.defaults.headers.common['Authorization'];\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}